CREATE OR REPLACE FUNCTION T_BONUS() RETURNS TRIGGER AS $$
BEGIN
IF TG_OP = 'UPDATE' OR TG_OP='DELETE'
THEN
RAISE EXCEPTION 'N√ÉO REALIZE UPDATE OU DELETE NA TABELA %',
TG_RELNAME;
ELSE
RETURN NEW;
END IF;
RETURN NULL;
END;
$$ LANGUAGE PLPGSQL;
CREATE TRIGGER T_BONUS_U_D
BEFORE DELETE OR UPDATE ON BONUS FOR EACH ROW
EXECUTE PROCEDURE T_BONUS ();

DELETE FROM BONUS;

CREATE TABLE VENDAS_ITENS_H(
CODIGO_ITEM INTEGER NOT NULL,
CODIGO_VENDA INTEGER NOT NULL,
CODIGO_PRODUTO INTEGER NOT NULL,
QUANTIDADE_ITEM INTEGER NOT NULL,
USARIO CHARACTER VARYING(30),
DATAHORA TIMESTAMP);

CREATE OR REPLACE FUNCTION T_VENDAS_ITENS() RETURNS TRIGGER AS $$
BEGIN
IF TG_OP = 'UPDATE' OR TG_OP='DELETE'
THEN
INSERT INTO VENDAS_ITENS_H VALUES (OLD.*, CURRENT_USER,
CURRENT_TIMESTAMP);
ELSE
RETURN NEW;
END IF;
RETURN NULL;
END;
$$ LANGUAGE PLPGSQL;
CREATE TRIGGER T_VENDAS_ITENS_U_D
AFTER DELETE OR UPDATE ON VENDAS_ITENS FOR EACH ROW
EXECUTE PROCEDURE T_VENDAS_ITENS ();

SELECT * From vendas_itens; 
UPDATE vendas_itens set quantidade_item = 60 WHERE codigo_item= 20;
Delete From vendas_itens  where codigo_item=20;
select * from vendas_itens_h;


CREATE TABLE COMISSOES_H(
CODIGO_COMISSAO INTEGER NOT NULL,
CPF_FUNCIONARIO VARCHAR(11) NOT NULL,
CODIGO_VENDA INTEGER NOT NULL,
COMISSAO DOUBLE PRECISION NOT NULL,
USARIO CHARACTER VARYING(30),
DATAHORA TIMESTAMP);

CREATE OR REPLACE FUNCTION T_COMISSOES() RETURNS TRIGGER AS $$
BEGIN
IF TG_OP = 'UPDATE' OR TG_OP='DELETE'
THEN
INSERT INTO COMISSOES_H VALUES (OLD.*, CURRENT_USER,
CURRENT_TIMESTAMP);
ELSE
RETURN NEW;
END IF;
RETURN NULL;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER T_COMISSOES_U_D
AFTER DELETE OR UPDATE ON COMISSOES FOR EACH ROW
EXECUTE PROCEDURE T_COMISSOES();

SELECT * FROM comissoes;
DELETE FROM COMISSOES WHERE codigo_comissao=202;
UPDATE comissoes SET comissao=10.2 WHERE cpf_funcionario='564332334';
SELECT * FROM comissoes_h;
