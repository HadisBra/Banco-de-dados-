CREATE TABLE DISCIPLINA_AUDIT1_LOG1(
OPERACAO CHAR(1) NOT NULL,
QTD_NEW INTEGER NOT NULL,
QTD_OLD INTEGER NOT NULL,
USARIO CHARACTER VARYING(30),
DATA TIMESTAMP NOT NULL
);


CREATE OR REPLACE FUNCTION PROCESSA_EMP_AUDIT() RETURNS TRIGGER AS $$
BEGIN
IF (NEW.QTD_AULAS <> OLD.QTD_AULAS) THEN
INSERT INTO DISCIPLINA_AUDIT1_LOG1 VALUES ('U', NEW.QTD_AULAS, OLD.QTD_AULAS, USER, NOW());
RETURN NEW;
END IF;
RETURN NULL;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER EMP_AUDIT1
AFTER UPDATE ON DISCIPLINA
FOR EACH ROW EXECUTE PROCEDURE PROCESSA_EMP_AUDIT();


UPDATE DISCIPLINA SET QTD_AULAS = 9 WHERE NOME_DISCIPLINA = ' BIOLOGIA';
UPDATE DISCIPLINA SET QTD_AULAS = 6 WHERE NOME_DISCIPLINA = 'HISTÓRIA';
UPDATE DISCIPLINA SET QTD_AULAS = 11 WHERE NOME_DISCIPLINA = 'MATEMÁTICA';


SELECT * FROM DISCIPLINA;
SELECT * FROM DISCIPLINA_AUDIT1_LOG1;


CREATE TABLE PROFDISC_AUDIT1_LOG2 (
OPERACAO CHAR(1) NOT NULL,
CODIGO_OLD INTEGER NOT NULL,
NUMERO_OLD INTEGER NOT NULL,
ANO_OLD CHARACTER VARYING NOT NULL,
USARIO CHARACTER VARYING(30),
DATA TIMESTAMP NOT NULL);


CREATE OR REPLACE FUNCTION PROF_EMP_AUDIT() RETURNS TRIGGER AS $$
BEGIN
INSERT INTO PROFDISC_AUDIT1_LOG2 VALUES ('D', OLD.CODIGO_DISC, OLD.NUMERO_PROF, OLD.ANO ,USER, NOW());
RETURN OLD;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER EMP_AUDIT2
BEFORE DELETE ON PROFDISC
FOR EACH ROW EXECUTE PROCEDURE PROF_EMP_AUDIT();

DELETE FROM PROFDISC WHERE CODIGO_DISC = 4;

SELECT * FROM PROFDISC;
SELECT * FROM PROFDISC_AUDIT1_LOG2;


CREATE TABLE MATRICULA_AUDIT1_LOG3 (
OPERACAO CHAR(1) NOT NULL,
NUMERO_ALUNO INTEGER NOT NULL,
CODIGO_DISC INTEGER NOT NULL,
ANO CHARACTER VARYING NOT NULL,
USARIO CHARACTER VARYING(30),
DATA TIMESTAMP NOT NULL);

CREATE OR REPLACE FUNCTION MATRICULA_EMP_AUDIT1() RETURNS TRIGGER AS $$
BEGIN
INSERT INTO MATRICULA_AUDIT1_LOG3 VALUES ('I', NEW.NUMERO_ALUNO, NEW.CODIGO_DISC, NEW.ANO, USER, NOW());
RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER EMP_AUDIT3
AFTER INSERT ON MATRICULA
FOR EACH ROW EXECUTE PROCEDURE MATRICULA_EMP_AUDIT1();

INSERT INTO MATRICULA VALUES (10, 8, '2022');

SELECT * FROM MATRICULA;
SELECT * FROM MATRICULA_AUDIT1_LOG3;


CREATE TABLE PROFESSOR_LOG_4 (
PROFNOME_O CHARACTER VARYING(30), 
PROFNOME_N CHARACTER VARYING(30),
USARIO CHARACTER VARYING(30),
DATAHORA TIMESTAMP);

CREATE OR REPLACE FUNCTION PROF_AUDIT() RETURNS TRIGGER AS $$
BEGIN
IF (NEW.PROFNOME <> OLD.PROFNOME) THEN
INSERT INTO PROFESSOR_LOG_4
VALUES (OLD.PROFNOME, NEW.PROFNOME, CURRENT_USER, CURRENT_TIMESTAMP);
END IF;
RETURN NULL;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER T_PROF_AUDIT
BEFORE UPDATE ON PROFESSOR FOR EACH ROW EXECUTE PROCEDURE PROF_AUDIT();

UPDATE PROFESSOR SET PROFNOME = 'MARTA' WHERE NUMERO_PROF = 5;
UPDATE PROFESSOR SET PROFNOME = 'MARCELO' WHERE NUMERO_PROF = 3;

SELECT * FROM PROFESSOR;
SELECT * FROM PROFESSOR_LOG_4;

CREATE TABLE MATRICULA_LOG_5 (
NUMERO_ALUNO INTEGER,
CODIGO_DISC INTEGER,
ANO CHARACTER VARYING(4),
USARIO CHARACTER VARYING(30),
DATAHORA TIMESTAMP);

CREATE OR REPLACE FUNCTION MATRICULA_AUDIT() RETURNS TRIGGER AS $$
BEGIN
INSERT INTO MATRICULA_LOG_5
VALUES (OLD.NUMERO_ALUNO, OLD.CODIGO_DISC, OLD.ANO, CURRENT_USER, CURRENT_TIMESTAMP);
RETURN NULL;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER T_MATRICULA_AUDIT
BEFORE DELETE ON MATRICULA FOR EACH ROW EXECUTE PROCEDURE MATRICULA_AUDIT ();

DELETE FROM MATRICULA WHERE NUMERO_ALUNO=8;
DELETE FROM MATRICULA WHERE NUMERO_ALUNO=1;

SELECT * FROM MATRICULA;
SELECT * FROM MATRICULA_LOG_5;

